App structure:
   App.jsx (get-user.js)
     ~ Predictions: prediction-results (get-fixtures.js)
       ~ Fixture list
         ~ Fixture


Tasks:
  ✔ Colour in results depending on prediction @done (17-08-03 19:09)
  ✔ Bring up user state to top level of app @done (17-08-03 19:09)
    ✔ then, Pass down props with user data like username and team name @done (17-08-03 19:09)
  ✔ In userPredictions put predictions in their own object @done (17-08-02 23:57)
    ☐ add booleans for hasSubmittedPredictions and resultTotalled and actual points score
  ✔ Add sign up/login/logout pages and functions @done (17-08-04 22:43)
  ☐ Use logged in ID from aut to grab user data from Firebase 
  ☐ Add team data to DB
  ☐ Add state info to DB eg current season and gameweek
  ☐ Add 

Todo:
  ☐ Get how many 3s, 1s and 0s
    ☐ Use to order the league
  League:
    ☐ Make one
  Login:
    ☐ Browser state
  Routing:
  ☐ add routing
  Attach route to state
  When change route update state
    ☐ Home / Predictions page
    Check if a user is logged in
      ~ yes - put path as /:user
      ~ no - put path to / 
    ☐ Profile (private)
    ☐ Team page (public)
    ☐ League page (public)
  
Thoughts: 
  Can only change the team name once a season
  Add a one offs prediction game (you just do one gameweek)
  You pick a favourite team - get double points for those results

Notes:
   React folder structure = https://daveceddia.com/react-project-structure/
   Routing = https://medium.freecodecamp.org/you-might-not-need-react-router-38673620f3d
     library for parsing :typeurls https://github.com/pillarjs/path-to-regexp
     or history api https://github.com/reacttraining/history
   Using Firebase and React Router: http://bodiddlie.github.io/firebase-auth-with-react-router/
   Setting state on properties of objects: https://stackoverflow.com/a/43639228/2368141
   Fooball api, has matchdays/gameweeks: http://api.football-data.org

